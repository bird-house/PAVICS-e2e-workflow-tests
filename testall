#!/bin/sh

. ./default_build_params

set -x

# emulate "clean after checkout" of single branch pipeline
git clean -fdx

# download all additional repos containing extra notebooks to test
./downloadrepos

# replace all slash (/) by dash (-) because (/) is illegal in folder name
# for branch name of the format "feature/my_wizbang-feature"
# github does the same when downloading repo archive by downloadrepos above
PAVICS_SDI_BRANCH="`echo "$PAVICS_SDI_BRANCH" | sed "s@/@-@g"`"
FINCH_BRANCH="`echo "$FINCH_BRANCH" | sed "s@/@-@g"`"
RAVEN_BRANCH="`echo "$RAVEN_BRANCH" | sed "s@/@-@g"`"
ESGF_COMPUTE_API_BRANCH="`echo "$ESGF_COMPUTE_API_BRANCH" | sed "s@/@-@g"`"

# lowercase VERIFY_SSL string
VERIFY_SSL="`echo "$VERIFY_SSL" | tr '[:upper:]' '[:lower:]'`"
if [ x"$VERIFY_SSL" = xfalse ]; then
    # if Env var DISABLE_VERIFY_SSL is present, notebook should disable ssl
    # cert verification
    # in notebook use:
    # verify_ssl = True if 'DISABLE_VERIFY_SSL' not in os.environ else False
    export DISABLE_VERIFY_SSL=1
    echo "setting env var DISABLE_VERIFY_SSL for notebooks"
fi

# presence of setup.cfg, tox.ini files confuse py.test execution rootdir discovery
rm -v finch-$FINCH_BRANCH/setup.cfg
rm -v raven-$RAVEN_BRANCH/setup.cfg
rm -v esgf-compute-api-$ESGF_COMPUTE_API_BRANCH/setup.cfg
rm -v esgf-compute-api-$ESGF_COMPUTE_API_BRANCH/tox.ini

# last notebooks higher chance for name clash
./runtest "notebooks/*.ipynb \
    finch-$FINCH_BRANCH/docs/source/notebooks/*.ipynb \
    pavics-sdi-$PAVICS_SDI_BRANCH/docs/source/notebooks/*.ipynb \
    esgf-compute-api-$ESGF_COMPUTE_API_BRANCH/examples/*.ipynb"
# raven-$RAVEN_BRANCH/docs/source/notebooks/*.ipynb
EXIT_CODE="$?"


### Save conda env details for manual reproducibility outside of docker image.

ENV_DUMP_DIR="buildout/env-dump"
mkdir -p $ENV_DUMP_DIR

ENV_EXPORT_FILE="$ENV_DUMP_DIR/environment-export-birdy.yml"
rm -fv $ENV_EXPORT_FILE
conda env export -n birdy > $ENV_EXPORT_FILE

LIST_EXPLICIT_FILE="$ENV_DUMP_DIR/conda-list-explicit-birdy.txt"
rm -fv $LIST_EXPLICIT_FILE
conda list -n birdy --explicit > $LIST_EXPLICIT_FILE

PIP_FREEZE_FILE="$ENV_DUMP_DIR/pip-freeze-birdy-requirements.txt"
rm -fv $PIP_FREEZE_FILE
pip freeze > $PIP_FREEZE_FILE


# exit with runtest exit code
exit $EXIT_CODE
